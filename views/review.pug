extends layout

block content
  style.
    .grid-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(700px, 1fr));
      grid-gap: 50px;
      object-fit: cover;
      padding: 10px;
    }
    
    .grid-item {
      background-color: wheat;
      border: 1px solid rgba(255, 255, 255, 0.8);
      padding: 10px;
      font-size: 17px;
      border-radius:15px;
    }
    body, html {
      height: 100%;
      margin: 0;
    }

    .bg {
      /* The image used */
      background-image: url("https://www.hd-wallpapersdownload.com/script/new-wallpaper/desktop-abstract-black-background-download.jpg");

      /* Full height */
      height: 100%; 

      /* Center and scale the image nicely */
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      text-align:center;
    }
    .h2-display {
      color: orange;
      text-align:center;
    }
    .jumbo-display {
      background-color: rgba(192,192,192,0.3);
      text-align:center;
    }
  link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css')
  div(class='bg' id='changeBack')
    h2(style='color:orange;text-align:center;') Oregon State University
    a.h5.backToLink(href="../course?deptId="+deptId, style='color: brown;', id='backTo') «Back to Courses
    
    br
    br
    .jumbotron.container(style=' background-color: rgba(192,192,192,0.3);text-align:center;')
      input(type='hidden',name='courseId',id='courseId', value=courseId)
      h2(style='color:white;text-align:left;') #{courseId}
      h4(style='color:white;text-align:center;') Overall Rating
      br
      input#deleteBtn.btn.btn-success(type='button', name='delete', value='Post a Review', data-toggle='modal', data-target='#confirm-post')
  #confirm-post.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
    .modal-dialog
      .modal-content
        .modal-header.h4 Leave a Review
        .modal-body
          form#formfield.form-horizontal(method='post',action='./review/addReview')
            input(type='hidden',name='courseId',id='courseId', value=courseId)
            input(type='hidden',name='deptId',id='deptId', value=deptId)
            .form-group
              label Which term did you took the course
              | 
              select(name='courseTerm' id='term' class='form-control' required)
                option(value='default') Select Term
                option(value='Fall') Fall
                option(value='Winter') Winter
                option(value='Spring') Spring
                option(value='Summer') Summer
            .form-group
              label Things which you liked about the course
              textarea#coursePros.form-control(placeholder='Enter pros about this course', name='coursePros',rows='2',maxlength='500',required)
            .form-group
              label Drawbacks
              textarea#courseCons.form-control(placeholder='Enter cons', name='courseCons',rows='1',maxlength='500',required)
            .form-group
              label Useful links or Subject Stuff
              textarea#courseLinks.form-control(placeholder='Enter cons', name='courseLinks',rows='1',maxlength='500',required)
            .form-group
              label Pre tips or suggestions to your peers
              textarea#courseTips.form-control(placeholder='Enter suggestions', name='courseTips',rows='1',maxlength='500',required)
            .form-group
              label Feedback or Suggestions to Improve
              textarea#courseFeedback.form-control(placeholder='Enter here', name='courseFeedback',rows='1',maxlength='500',required)
            .form-group
              label Rate on a scale of 0 - 10 : 
              | 
              input(type="number" name='courseRating' id='rating' min='0' max='10')
            .form-group
              label Overall feedback
              .rating.h3
                input#star5.radio-btn.hide(name='courseOverall',type='radio', value='5')
                label(for='star5') ☆
                input#star4.radio-btn.hide(name='courseOverall', type='radio', value='4')
                label(for='star4') ☆
                input#star3.radio-btn.hide(name='courseOverall',type='radio', value='3')
                label(for='star3') ☆
                input#star2.radio-btn.hide(name='courseOverall', type='radio', value='2')
                label(for='star2') ☆
                input#star1.radio-btn.hide(name='courseOverall', type='radio', value='1')
                label(for='star1') ☆
                .clear
            .form-group(style='color:white;text-align:left;')
              .row
                .col-sm-2
                  button.btn.btn-default(type='button', data-dismiss='modal') Cancel
                .col-sm-2
                  input#postBtn.btn.btn-success(type='submit', name='save', value='Post')
  br
  br
  h2(style='text-align:center;color:cornflowerblue;') Course Reviews
  br
  #hello
    script.
      class RatingComponent extends React.Component {
        constructor(props) {
          super(props)
          this.state = Object.assign({}, { reviews: props.reviews,deptId:'CS' });
        }
        componentDidMount() {
        }
        render() {
          return (
            React.createElement("div", { className: 'bg',ref:'changeBack' },
              React.createElement("h2", { className: 'h2-display',ref:'changeBack' },'Oregon State University'),
              React.createElement("a", { href:'../course?deptId='+this.state.deptId,className: 'h2-display',ref:'backTo' },'«Back to Courses'),
              React.createElement("div", { className: 'jumbotron container jumbo-display' },
                React.createElement("h2", { className: 'h2-display',ref:'changeBack' },'Oregon State University'),
                React.createElement("h2", { className: 'h2-display',ref:'changeBack' },'Oregon State University'),
                React.createElement("button", { className: 'h2-display',ref:'changeBack' },'Oregon State University'),
              ),
            )
        }
      }
      class ModalComponent extends React.Component {
        constructor(props) {
          super(props)
          this.state = Object.assign({}, { reviews: props.reviews });
        }
        componentDidMount() {
        }
        render() {
          return (
            React.createElement("div", { className: 'container' },)
        }
      }

      class CourseComponent extends React.Component {
        constructor(props) {
          super(props)
          this.state = Object.assign({}, { reviews: props.reviews });
        }
        componentDidMount() {
          var courseId = document.getElementById('courseId').value;
          fetch('./review/reviews?courseId='+ courseId)
                .then(res => res.json())
                .then(reviews => this.setState({ reviews: reviews }));
          setInterval(
            function(){
              fetch('./review/reviews?courseId='+ courseId)
                .then(res => res.json())
                .then(reviews => this.setState({ reviews: reviews }));
            }.bind(this), 30000);
        }
        render() {
          if (this.state.reviews) {
            const numbers = this.state.reviews;
            return (
              React.createElement("div", { className: 'container' },
                React.createElement("div", { className: 'grid-container' },
                  this.state.reviews.map((number) => {
                    var stars = [];
                    var rating = number.courseOverall;
                    var i =0;
                    while (i<rating){stars.push('☆');i++;};
                    return React.createElement("div", { key: number._id, className: 'grid-item' },
                  
                        React.createElement("table", {},
                          React.createElement("tbody", {},
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Term")
                              ),
                              React.createElement("td", {},
                                React.createElement("text", {className:'text-display'}, number.courseTerm)
                              ),
                            ),
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Positives")
                              ),
                              React.createElement("td", {},
                                React.createElement("text", {className:'text-display'}, number.coursePros)
                              ),
                            ),
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Negatives")
                              ),                
                              React.createElement("td", {},
                                React.createElement("text", {className:'text-display'}, number.courseCons)
                              ),
                            ),
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Links")
                              ),     
                              React.createElement("td", {},
                                React.createElement("text", {className:'text-display'}, number.courseLinks)
                              ),
                            ),
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Suggestions")
                              ),
                              React.createElement("td", {},
                                React.createElement("text", {className:'text-display'}, number.courseTips)
                              ),
                            ),
                            React.createElement("tr", {},
                              React.createElement("td", {},
                                React.createElement("label", {}, "Rating")
                              ),
                              React.createElement("td", {},
                                React.createElement("text", {className:'star-display'}, stars)
                              ),
                            ),
                          ),
                        ),             
                      )
                    }
                  )
                )
              )
            )
          }
        }
      }
      const reviews = []
      ReactDOM.render(
        React.createElement(CourseComponent, { reviews: reviews }),
        document.getElementById("hello")
      );

    script.
      $(document).ready(function () {
      // Check Radio-box
        $(".rating input:radio").attr("checked", false);
        $('.rating input').click(function () {
          $(".rating span").removeClass('checked');
          $(this).parent().addClass('checked');
        });
        
        $("#term").change(function(){
          if ( $(this).val() === "Fall" ) { 
            
            $("#changeBack").attr('style','background-image: url(https://s-media-cache-ak0.pinimg.com/originals/73/8a/ee/738aeed88a4e4eeb4e3960f42a1e1254.jpg);height: 100%; width: 100%; background-size:cover;margin-left:auto;margin-right:auto;');
            $("#backTo").attr('style','color:white;');
              }
              if( $(this).val() == "Winter" ) { 
          $("#changeBack").attr('style','background-image: url(http://news.psu.edu/sites/default/files/styles/photo_gallery_large/public/2%2027%20snow%20fall%20003.jpg?itok=fl4KaX2A);height: 100%; width: 100%; background-size:cover;margin-left:auto;margin-right:auto;');
          $("#backTo").attr('style','color:brown;');
              }
              if( $(this).val() == "Spring" ) { 
          $("#changeBack").attr('style','background-image: url(http://uhds.oregonstate.edu/sites/uhds.oregonstate.edu/files/illc_0.jpg);height: 100%; width: 100%; background-size:cover;margin-left:auto;margin-right:auto;');
          $("#backTo").attr('style','color:brown;');
              }
              if( $(this).val() == "Summer" ) { 
          $("#changeBack").attr('style','background-image: url(http://summer.oregonstate.edu/images/proprietary/students/legs-MU.jpg);height: 100%; width: 100%; background-size:cover;margin-left:auto;margin-right:auto;');
          $("#backTo").attr('style','color:brown;');
              }
              if( $(this).val() == "default" ) { 
          $("#changeBack").attr('style','background-image: url(https://www.hd-wallpapersdownload.com/script/new-wallpaper/desktop-abstract-black-background-download.jpg);height: 100%; width: 100%; background-size:cover;margin-left:auto;margin-right:auto;');
          $("#backTo").attr('style','color:brown;');
              }
              
          
          }); 
      });

      function refresh() {
        var pros = $('#pros').val();
        var cons = $('#cons').val();
        var feedback = $('#feedback').val();
        var extra = $('#extra').val();
        var star = $('#star5').val();
          $.post('review?courseId=CS562&deptId=CS', { pros: pros, cons: cons, feedback: feedback, extra: extra,star:star}).done(function (data) {
            console.log(data);
            });
      }

        