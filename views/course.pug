extends layout

block content
    style.
        body { 
            background: url("/images/orange.jpg") no-repeat center center fixed; 
            background-size: cover;
            height: 100%;
        }
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
            grid-gap: 50px;
            object-fit: cover;
            padding: 10px;
        }
        .grid-item {
            //background-color: wheat;

            //border: 1px solid rgba(255, 255, 255, 0.8);
            padding: 10px;
            font-size: 20px;
            text-align: center;
            color:ivory;
        }
        .grid-container>a:hover {
            color: darkcyan;
            text-decoration: none;
        }
        .jumbo1 {
            background-color: rgba(192,192,192,0);
            text-align:center;
            padding:2rem 1rem;
        }
    div(style='text-align:center;')
        h2(style='color:cornsilk;text-align:center;') Oregon State University
        a.h5.backToLink(href="/univ/dept", style='color: brown;', id='backTo') Â«Back to Departments
    #hello
    input#dept(type='hidden', value=deptId)
    script.
        var deptId= document.getElementById("dept").value;
        class CourseComponent extends React.Component {
            constructor(props) {
                super(props);
                this.state = Object.assign({}, { courses: props.courses,search:'' });
            }
            componentDidMount() {
                this.fetchAll();
            }
            fetchAll() {
                fetch('./course/courses?deptId=' + deptId)
                .then(res => res.json())
                .then(courses => this.setState({ courses: courses }));
            }
            updateSearch(event) {
                this.setState({ search: event.target.value.substr(0, 20) });
            }
            addCourse(event) {
                event.preventDefault();
                //console.log(this);
                var data = { crsNr: this.refs.first.value, crsNme: this.refs.second.value };
                this.setState({
                courses: this.state.courses.concat(data)
                })
                this.refs.first.value = '';
                this.refs.second.value = '';
                this.postCourse(data);
            }
            postCourse(data) {
                const headers = new Headers();
                headers.append('Content-Type', 'application/json');
                const options = {
                method: 'POST',
                headers,
                body: JSON.stringify(data)
            }
            const req = new Request('http://localhost:3001/univ/dept/course/addCourse', options);
            const res = fetch(req);
            const status = res.status;
            }
            render() {
                if (this.state.courses) {
                    //const numbers = this.state.courses;
                    let courses = this.state.courses.filter(
                        (crs) => {
                        return (crs.crsNr + crs.crsNme).toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;
                        }
                    );
                    return (
                        React.createElement("div", { className: 'container' },
                            React.createElement("div", { className: 'jumbotron jumbo1' },
                                React.createElement("input", { className: 'form-control', value: this.state.search, onChange: this.updateSearch.bind(this), placeholder: 'Search by Course' }),
                                /*React.createElement("form", { onSubmit: this.addCourse.bind(this) },
                                    React.createElement("input", { type: 'text', ref: 'first', required: true, placeholder: 'Enter first' }),
                                    React.createElement("input", { type: 'text', ref: 'second', required: true, placeholder: 'Enter Second' }),
                                    React.createElement("button", { type: 'submit' }, "Add"),
                                ),*/
                            ),
                            React.createElement("div", { className: 'grid-container' },
                                courses.map((number) => {
                                    return React.createElement("a", { key: number.crsNr, className: 'grid-item', href: './course/review?courseId=' + deptId+number.crsNr+'&deptId='+deptId }, number.crsNr + " - " + number.crsNme)
                                })
                            )
                        )
                    )
                }
            }
        }
        const courses = []
        ReactDOM.render(
            React.createElement(CourseComponent, { courses: courses }),
            document.getElementById("hello")
        );
